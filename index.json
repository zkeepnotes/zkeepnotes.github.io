[{"categories":null,"content":"期末自救指北","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"德语的特点是「三性两数四格」：名词在语法上有阳性、阴性和中性；有单数和复数；有第一、二、三、四格，分别用 N.（Nominativ）、G.（Genitiv）、D.（Dativ）、A. （Akkusativ）指示。形容词、冠词随着「性数格」变化，称为变格；动词随着人称变化，称为变位。 ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:0:0","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"语音 （未完成） ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:1:0","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"语法 ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:2:0","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"定、不定冠词变格表 名词的出现形式有带定冠词出现、带不定冠词出现和不带冠词出现。 名词一般在首次出现时用不定冠词，在重复该名词时可用定冠词。 定冠词变格是各种变格的源泉： Si. 阳 阴 中 Pl. N. der die das die G. des der des der D. dem der dem den A. den die das die 不定冠词变格表： Si. 阳 阴 中 N. ein eine ein G. eines einer eines D. einem einer einem A. einen eine ein Das ist ein Haus. Das Haus ist groß. ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:2:1","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"人称代词的第一格 人称代词代表人、物或者概念。人称代词第一格在句中作主语。 人称（第一格） Si. Pl. 第一人称 ich（我） wir（我们） 第二人称 du（你） ihr（你们） 第三人称 er（他）sie（她）es（它） sie（他们） 尊称 Sie（您） Sie（您们） du 和 ihr 比较亲切，随和，用于家人、朋友、学生、孩子之间。其他场合用 Sie 表示尊敬。 ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:2:2","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"sein 和 haben 的现在时变位 动词 sein（是）和 haben（有）是最基础的动词，它们的现在时变位不规则。 人称 sein haben ich bin habe du bist hast er/sie/es ist hat wir sind haben ihr seid habt sie/Sie sind haben ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:2:3","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"动词的现在时变位 动词由词干和词尾组成，词尾是 -en。大多数弱变化动词现在时变位时，词干不发生变化，词尾则根据人称变位。 人称 lernen machen bilden heißen 词尾 ich lerne mache bilde heiße -e du lernst machst bildest heißt -st er/sie/es lernt macht bildet heißt -t wir lernen machen bilden heißen -en ihr lernt macht bildet heißt -t sie/Sie lernen machen bilden heißen -en 词干以 -d，-t，-dm，-tm，-chn，-ffn 结尾的动词变位时，为便于发音，在人称词尾 -st，-t 前加 -e。 词干以 -s，-ß，-z，-tz 结尾的动词，第二人称单数加词尾 -t。 ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:2:4","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"名词的第一格和第四格 名词第一格作主语或表语。 名词第四格作动词的直接宾语或介词的宾语。 ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:2:5","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"名词的第三格 复数第一格以 -e，-er，-el 结尾的名词，复数第三格须加 -n。 名词第三格作某些动词的第三格宾语，或受某些介词的支配。 ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:2:6","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"人称代词的第三格和第四格 N. ich du er sie es wir ihr sie Sie D. mir dir ihm ihr ihm uns euch ihnen Ihnen A. mich dich ihn sie es uns euch sie Sie ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:2:7","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"介词 in，an，auf，bei，zu，aus 能支配第三、四格的介词，一般遵循「静三动四」的规则：表示静态含义用第三格，表示动态含义用第四格。 支配第三、四格的介词：in，an，auf (1) in （D.）在……里面；在……时候 Ich lese im Lesesaal. （A.）到……里面去 Ich gehe in den Lesesaal. (2) an （D.）在……旁边；在……时候 Der Platz am Fenster ist frei. （A.）到……旁；向…… Bitte, kommen Sie ans Fenster! (3) auf (D.) 在……上面；在……时候 Die Bücher sind auf dem Tisch. (A.) 到……上面；以……方式 Ich lege das Buch auf den Tisch. 支配第三格的介词：bei，zu，aus (1) bei （D.）在……方面；在某人处 Ich helfe Inge beim Studium. Ich wohne bei Frau Schmidt. (2) zu （D.）向……；为了 Wir gehen zum Abendessen. Ich gehe zur Mensa. (3) aus （D.）从……出来；由……构成 Hans kommt aus dem Zimmer. Der Tisch ist aus Holz. Peter kommt aus Bonn. 缩写 dem der das in im ins an am ans auf aufs bei beim zu zum zur ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:2:8","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"否定词 nicht 和 kein nicht 的用法 否定动词谓语，一般位于句末 Frau Müller kommt nicht. 否定其他句子成分，位于该句子成分前 Frau Müller kommt nicht zum Unterricht. Der Lesesaal ist nicht groß, aber ruhig. kein 的用法 kein 否定带不定冠词或不带冠词的名词，其性、数、格与被否定的名词一致。 Si. 阳 阴 中 Pl. N. kein keine kein keine G. keines keiner keines keiner D. keinem keiner keinem keinen A. keinen keine kein keine Wir haben heute keinen Unterricht. Ich habe kein Buch. ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:2:9","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"强变化动词的现在时变位 少数强变化动词，其现在时单数第二、三人称变位时，词干元音需变音或换音。 （未完成） ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:2:10","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":null,"content":"单词 （未完成） ","date":"2021-12-16","objectID":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/:3:0","tags":null,"title":"德语笔记","uri":"/posts/%E5%BE%B7%E8%AF%AD%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"Hello, blog!","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"本博客使用 GitHub Pages、Hugo 和 LoveIt，可以高度麻烦地定制化博客。 GitHub Pages Hugo LoveIt 优点 无须购买云服务，支持的功能多，玩法丰富 基于 go 开发，更快及不必安装一堆依赖 简洁 缺点 项目和网站的大小不超过 1GB，每小时不超过 10 个版本，每个月带宽使用上限为 100GB 更年轻，功能性和稳定性欠缺，支持主题少 作者上次更新还是在2020年 ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:0:0","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"1 准备 ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:1:0","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"1.1 安装 Hugo 详细的安装说明请参考 官方文档。注意安装 extended 版本。 macOS 下可使用包管理工具 Homebrew 快速安装： brew install hugo Windows 下可使用包管理工具 chocolatey 快速安装。以管理员权限打开 cmd.exe：没运行过，不保证这段代码的可行性 # 安装 chocolatey @\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \"iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" \u0026\u0026 SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\" # 安装 Hugo choco install hugo-extended -y 验证 Hugo 是否安装成功： hugo version ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:1:1","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"1.2 安装 Git 从 官方网站 下载，或使用命令行： brew install git choco install git -y ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:1:2","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"1.3 创建 GitHub 仓库 注册一个 GitHub1 账号。 注意：用户名与随后创建的博客网址强相关。此用户名记作 \u003cuser_name\u003e。（本文用 \u003c\u003e 指代参数。） 在个人主界面里选择 “Create a repository”。在 “Repository name” 的位置填写仓库名称，称为 \u003crepo_name\u003e，格式为 \u003cuser_name\u003e.github.io。仓库权限为 “public”。 提示 当 \u003crepo_name\u003e 为 \u003cuser_name\u003e.github.io 时，最后的博客网址为 \u003cuser_name\u003e.github.io。 否则，网址为 \u003cuser_name\u003e.github.io/\u003crepo_name\u003e。 ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:1:3","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"2 快速搭建 ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:2:0","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"2.1 托管到 GitHub 打开命令行，在本地生成博客项目文件夹，该文件夹是所有操作执行的根目录： # 希望博客项目放在哪个文件夹下，命令行就处于哪个文件夹下，如 D:\\ 或 ～ hugo new site \u003cfolder_name\u003e # 目录名任取 cd \u003cfolder_name\u003e 将本地的项目文件夹初始化为 Github 仓库： git init # 生成 .git 文件夹 巧用 .gitignore 输入 git status，macOS 用户可能会看到 .DS_Store 文件。这是存储文件夹显示属性的文件，但我们并不想将其纳入 Git 的管理范围。在项目根目录里创建 .gitignore 文件并按 glob 模式 匹配不想要的文件即可处理这种情况。若已暂存了不想要的文件，可以用 git rm -r --cached . 撤销文件暂存。 考虑到每个项目都不需要 .DS_Store，采用全局配置的方法。在用户文件夹（即 Macintosh HD/Users/\u003cuser_name\u003e）下创建 .gitglobalignore 文件，在文件中输入 **/.DS_Store；在命令行中输入： git config --global core.excludesfile ~/.gitglobalignore 与远程仓库建立连接需要 \u003ctoken\u003e。登陆 GitHub \u003e 点击头像 \u003e “Settings” \u003e “Developer settings” \u003e “Personal access tokens” \u003e “Generate new token” 得到 \u003ctoken\u003e。“Expiration” 选择 “no expiration”，“Select scopes” 项全部勾选。 将项目文件推送到远程仓库： git add . # 添加所有文件到暂存区 git commit -m \"Initial commit\" # 提交暂存区到仓库区 git remote add origin https://\u003ctoken\u003e@github.com/\u003cuser_name\u003e/\u003crepo_name\u003e.git git push -u origin master # -u 将本地 master 分支与远程 master 分支关联 ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:2:1","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"2.2 安装主题 主题通常是单独的 Github 仓库，将其作为项目的子模块进行管理： git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt 加快下载速度 从 github.com 下载可能过慢，可以从 GitHub 的镜像网站下载： git submodule add https://hub.fastgit.org/dillonzq/LoveIt.git themes/LoveIt 但这会导致后面的 GitHub Actions 报错。 解决办法为：下载完毕后，打开文件 /.gitmodules，修改 [submodule \"themes/LoveIt\"] path = themes/LoveIt url = https://hub.fastgit.org/dillonzq/LoveIt.git 为 [submodule \"themes/LoveIt\"] path = themes/LoveIt url = https://github.com/dillonzq/LoveIt.git 打开 /.git/config，修改 [submodule \"themes/LoveIt\"] url = https://hub.fastgit.org/dillonzq/LoveIt.git 为 [submodule \"themes/LoveIt\"] url = https://github.com/dillonzq/LoveIt.git 打开命令行，输入： git submodule sync 以下是 LoveIt 主题的基础配置。使其全部代替根目录中 config.toml中的代码： baseURL = \"http://example.org/\" # [en, zh-cn, fr, ...] 设置默认的语言 defaultContentLanguage = \"zh-cn\" # 网站语言, 仅在这里 CN 大写 languageCode = \"zh-CN\" # 是否包括中日韩文字 hasCJKLanguage = true # 网站标题 title = \"我的全新 Hugo 网站\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"LoveIt\" [params] # LoveIt 主题版本 version = \"0.2.X\" [menu] [[menu.main]] identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" weight = 1 [[menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" weight = 2 [[menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" weight = 3 # Hugo 解析文档的配置 [markup] # 语法高亮设置 (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false 是必要的设置 (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false 创建第一篇文章： hugo new posts/first_post.md 生成文件在 /content/posts 下。参考 Markdown 基本语法，随意编辑文章。 注意：把前置参数 draft: false 改为 draft: true，且文件内容不能为空。 在本地渲染网站： hugo serve 到 http://localhost:1313 查看你的博客！ ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:2:2","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"2.3 部署网站 利用 Github Actions 可以帮助我们一键部署博客到网站上。 2.3.1 配置 GitHub Actions 创建 blog 分支： # 新建并切换到 blog 分支 git checkout -b blog # 在远程创建 blog 分支，并将本地 blog 分支与远程 blog 分支关联 git push --set-upstream origin blog 在网页端进入仓库 \u003e “Settings” \u003e “Branches”，切换默认分支为 blog 分支。 验证是否跟踪成功 检查分支跟踪关系： git branch -vv 可以看到类似于 * blog c63526c [origin/blog] Initial commit 的字样。 输入 :q 退出。 生成公私钥供 Github Action 使用： ssh-keygen -t rsa -b 4096 -C \"\u003cyour_email\u003e@\u003cexample.com\u003e\" -f blog -N \"\" # 在此命令运行的目录下得到两个文件： # blog.pub （公钥） # blog （私钥） 进入仓库，点击 “Settings”，在 “Deploy Keys” 中添加公钥，勾选 “Allow write access”；在 “Secrets” 中添加私钥，私钥名设置为 ACTIONS_DEPLOY_KEY。 新建若干文件夹与文件使得根目录包含：/.github/workflows/main.yml。写入 main.yml内容： name:hugo push to github pageson:push:branches:- blogjobs:build-deploy:runs-on:ubuntu-18.04steps:- uses:actions/checkout@v1with:submodules:true- name:Setup Hugouses:peaceiris/actions-hugo@v2with:hugo-version:'0.88.1'# 更改为当前所用版本extended:true- name:Buildrun:hugo --minify- name:Deployuses:peaceiris/actions-gh-pages@v2env:ACTIONS_DEPLOY_KEY:${{ secrets.ACTIONS_DEPLOY_KEY }}PUBLISH_BRANCH:masterPUBLISH_DIR:./public 在命令行中输入： git add . git commit -m \"\u003cdescription\u003e\" # 对本次提交的描述 git push 就可以在 https://username.github.io 中看到你的博客网站了！ 2.3.2 思路 按照 Hugo 的生成规则，执行 hugo 命令后，网站静态文件将会生成在 /public 文件夹。但由于我们使用 Github Pages 托管博客网站，该功能启用后 Github 仓库只会从 master branch 或 master branch /docs folder 读取网站源码。 我们解决这一问题的方法是新建 blog 分支将博客源码放在该分支下，利用 Github Actions 将 /public 目录下的网站文件推送到 master 分支。 Github Actions 使用一种模块化的思路，即将很多持续集成的操作写成独立的脚本文件，放到代码仓库，让其它开发者使用。因此进行持续集成时，可以直接引用别人写好的 actions，整个持续集成的过程，就是一个 actions 组合的过程。GitHub 做了一个 官方市场，可以搜索到他人提交的 actions。另外，还有一个 awesome actions 的仓库，也可以找到不少 actions。 我们的基本思路如下： 整个流程在 blog 分支 push 时触发； 只有一个 job，运行在 ubuntu-18.04 环境下； 使用 official action: checkout 获取仓库源码，clone 主题子模块； 使用 peaceiris/actions-hugo: GitHub Actions for Hugo 部署 hugo 环境，注意使用 extentded 版本（主题要求）； 直接执行 hugo 命令； 使用 peaceiris/actions-gh-pages 将当前分支 /public 目录下的内容部署到master分支。 可以到仓库 - “Actions” 中查看 workflow 是否运行成功或者排查错误。 ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:2:3","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"3 详细配置 对网站进行更加个性化的定制。 ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:3:0","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"3.1 网站配置 使下列代码全部代替 config.toml中的代码： baseURL = \"https://\u003cuser_name\u003e.github.io\" # [en, zh-cn, fr, ...] 设置默认的语言 defaultContentLanguage = \"zh-cn\" # 网站语言, 仅在这里 CN 大写 languageCode = \"zh-CN\" # 是否包括中日韩文字 hasCJKLanguage = true # 网站标题 title = \"\u003ctitle of website\u003e\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"LoveIt\" # whether to use emoji code enableEmoji = true # whether to use git commit log to generate lastmod record #enableGitInfo = false # whether to use robots.txt #enableRobotsTXT = false # copyright description used only for seo schema #copyright = \"This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.\" # 作者配置 [author] name = \"\u003cname\u003e\" link = \"https://\u003cuser_name\u003e.github.io/about/\" # Permalinks Info (https://gohugo.io/content-management/urls/#permalinks) [Permalinks] # posts = \":year/:month/:filename\" # or # posts = \":year/:month/:slug\" posts = \"posts/:filename\" [menu] [[menu.main]] identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" weight = 1 [[menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" weight = 2 [[menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"专栏\" url = \"/categories/\" title = \"\" weight = 3 [[menu.main]] identifier = \"about\" name = \"关于\" url = \"about\" weight = 4 [params] # LoveIt 主题版本 version = \"0.2.X\" # 网站描述 description = \"Null\" # 网站关键词 keywords = [\"Blog\"] # 网站默认主题样式 (\"light\", \"dark\", \"auto\") defaultTheme = \"auto\" # 公共 git 仓库路径，仅在 enableGitInfo 设为 true 时有效 gitRepo = \"\" # 哪种哈希函数用来 SRI, 为空时表示不使用 SRI # (\"sha256\", \"sha384\", \"sha512\", \"md5\") fingerprint = \"\" # 日期格式 dateFormat = \"2006-01-02\" # 网站图片, 用于 Open Graph 和 Twitter Cards images = [\"/logo.png\"] # 主页配置 [params.home] # RSS 文章数目 rss = 10 # 主页个人信息 [params.home.profile] enable = true # Gravatar 邮箱，用于优先在主页显示的头像 #gravatarEmail = \"\" # 主页显示头像的 URL avatarURL = \"/images/avatar.png\" # 主页显示的网站标题 (支持 HTML 格式) title = \"\u003ctitle of blog\u003e\" # 主页显示的网站副标题 subtitle = \"\u003csubtitle of blog\u003e\" # 是否为副标题显示打字机动画 typeit = false # 是否显示社交账号 social = true # 免责声明 (支持 HTML 格式) disclaimer = \"\" # 主页文章列表 [params.home.posts] enable = true # 主页每页显示文章数量 paginate = 6 # 被 params.page 中的 hiddenFromHomePage 替代 # 当你没有在文章前置参数中设置 \"hiddenFromHomePage\" 时的默认行为 defaultHiddenFromHomePage = false # 页面头部导航栏配置 [params.header] # 桌面端导航栏模式 (\"fixed\", \"normal\", \"auto\") desktopMode = \"fixed\" # 移动端导航栏模式 (\"fixed\", \"normal\", \"auto\") mobileMode = \"auto\" # 页面头部导航栏标题配置 [params.header.title] # LOGO 的 URL logo = \"/images/logo.png\" # 标题名称 name = \"\u003ctitle of header\u003e\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" # 是否为标题显示打字机动画 typeit = false # 页面底部信息配置 [params.footer] enable = true # 自定义内容 (支持 HTML 格式) custom = '' # 是否显示 Hugo 和主题信息 hugo = false # 是否显示版权信息 copyright = true # 是否显示作者 author = true # 网站创立年份 since = 2021 # ICP 备案信息，仅在中国使用 (支持 HTML 格式) icp = \"\" # 许可协议信息 (支持 HTML 格式) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # 作者的社交信息设置 [params.social] [params.social.Douban] # 排列图标时的权重 weight = 0 # 你的社交 ID id = \"\" # 你的社交链接的前缀 prefix = \"https://www.douban.com/people/\" # 当鼠标停留在图标上时的提示内容 title = \"豆瓣\" # 最终生成链接为 \"https://www.douban.com/people/id\" # 可据此获得 id [params.social.GitHub] weight = 1 id = \"\" prefix = \"https://github.com/\" title = \"GitHub\" #Email = \"xxxx@xxxx.com\" #RSS = true #Googlescholar = \"\" #Zhihu = \"\" #Bilibili = \"\" #Mastodon = \"\" #Steam = \"\" #Paypal = \"\" #Spotify = \"\" #Linkedin = \"\" #Twitter = \"xxxx\" #Instagram = \"xxxx\" #Facebook = \"xxxx\" #Telegram = \"xxxx\" #Medium = \"\" #Gitlab = \"\" #Youtubelegacy = \"\" #Youtubecustom = \"\" #Youtubechannel = \"\" #Tumblr = \"\" #Quora = \"\" #Keybase = \"\" #Pinterest = \"\" #Reddit = \"\" #Codepen = \"\" #FreeCodeCamp = \"\" #Bitbucket = \"\" #Stackoverflow = \"\" #Weibo = \"\" #Odnoklassniki = \"\" #VK = \"\" #Flickr = \"\" #Xing = \"\" #Snapchat = \"\" #Soundcloud = \"\" #Ba","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:3:1","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"3.2 网页图标 为了使各种设备都能显示网页图标，需要生成不同类型的 favicon。 访问 https://www.favicon-generator.org 或其他各类 favicon 生成网站，将得到的图片、browserconfig.xml 和 site.webmanifest 放置于 /static 目录。 ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:3:2","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"4 文章发布 总结发布文章的流程如下。 使用 Hugo 创建文件： hugo new posts/title.md 修改 前置参数。 利用 LoveIt 提供的各种样式撰写文章。 在本地渲染网站无误后： hugo serve # 在 http://localhost:1313 查看 部署到 GitHub： # 注意当前要处于根目录和 blog 分支 git add . git commit -m \"\" # 对本次提交的描述 git push 等待数分钟，GitHub Actions 的 workflow 完成后，到 https://username.github.io 查看博客。 ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:4:0","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"附录 I 科学访问 GitHub 由于 DNS 污染2 和 SNI 封锁3 ，GitHub 间歇性可连接。 使用项目 dev-sidecar 可以科学访问 GitHub。其 原理 是在本地启动代理服务器帮助访问目标网站；当目标网站需要拦截时（例如 GitHub），就通过中间人攻击修改请求或者请求其他替代网站，从而达到科学的目的。 由于浏览器和命令行访问网站原理不同，要打开 Git.exe 代理 选项。 警告 “加速服务” - “基本设置” - “日志” 中记录下了访问的所有网站。在不需要访问 GitHub 时可以把软件关掉。 ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:5:0","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"},{"categories":["博客搭建笔记"],"content":"附录 II 参考链接 [1]：LoveIt 官方文档 [2]：书葬的博客（特别致谢！） [3]：Hugo 官方文档 科学访问请参考附录 I ↩︎ 域名解析至缓慢或错误的 IP ↩︎ 服务器支持多个域名，目标域名明文传递 ↩︎ ","date":"2021-10-18","objectID":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/:6:0","tags":["技术"],"title":"博客搭建笔记","uri":"/posts/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"}]